{"version":3,"sources":["../../../client/components/auth/auth.service.js"],"names":[],"mappings":"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","file":"auth.service.js","sourcesContent":["'use strict';\r\n\r\n(function() {\r\n\r\nfunction AuthService($location, $http, $cookies, $q, appConfig, Util, User) {\r\n  var safeCb = Util.safeCb;\r\n  var currentUser = {};\r\n  var userRoles = appConfig.userRoles || [];\r\n\r\n  if ($cookies.get('token') && $location.path() !== '/logout') {\r\n    currentUser = User.get();\r\n  }\r\n\r\n  var Auth = {\r\n\r\n    /**\r\n     * Authenticate user and save token\r\n     *\r\n     * @param  {Object}   user     - login info\r\n     * @param  {Function} callback - optional, function(error, user)\r\n     * @return {Promise}\r\n     */\r\n    login({email, password}, callback) {\r\n      return $http.post('/auth/local', {\r\n        email: email,\r\n        password: password\r\n      })\r\n        .then(res => {\r\n          $cookies.put('token', res.data.token);\r\n          currentUser = User.get();\r\n          return currentUser.$promise;\r\n        })\r\n        .then(user => {\r\n          safeCb(callback)(null, user);\r\n          return user;\r\n        })\r\n        .catch(err => {\r\n          Auth.logout();\r\n          safeCb(callback)(err.data);\r\n          return $q.reject(err.data);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Delete access token and user info\r\n     */\r\n    logout() {\r\n      $cookies.remove('token');\r\n      currentUser = {};\r\n    },\r\n\r\n    /**\r\n     * Create a new user\r\n     *\r\n     * @param  {Object}   user     - user info\r\n     * @param  {Function} callback - optional, function(error, user)\r\n     * @return {Promise}\r\n     */\r\n    createUser(user, callback) {\r\n      return User.save(user,\r\n        function(data) {\r\n          $cookies.put('token', data.token);\r\n          currentUser = User.get();\r\n          return safeCb(callback)(null, user);\r\n        },\r\n        function(err) {\r\n          Auth.logout();\r\n          return safeCb(callback)(err);\r\n        }).$promise;\r\n    },\r\n\r\n    /**\r\n     * Change password\r\n     *\r\n     * @param  {String}   oldPassword\r\n     * @param  {String}   newPassword\r\n     * @param  {Function} callback    - optional, function(error, user)\r\n     * @return {Promise}\r\n     */\r\n    changePassword(oldPassword, newPassword, callback) {\r\n      return User.changePassword({ id: currentUser._id }, {\r\n        oldPassword: oldPassword,\r\n        newPassword: newPassword\r\n      }, function() {\r\n        return safeCb(callback)(null);\r\n      }, function(err) {\r\n        return safeCb(callback)(err);\r\n      }).$promise;\r\n    },\r\n\r\n    /**\r\n     * Gets all available info on a user\r\n     *   (synchronous|asynchronous)\r\n     *\r\n     * @param  {Function|*} callback - optional, funciton(user)\r\n     * @return {Object|Promise}\r\n     */\r\n    getCurrentUser(callback) {\r\n      if (arguments.length === 0) {\r\n        return currentUser;\r\n      }\r\n\r\n      var value = (currentUser.hasOwnProperty('$promise')) ?\r\n        currentUser.$promise : currentUser;\r\n      return $q.when(value)\r\n        .then(user => {\r\n          safeCb(callback)(user);\r\n          return user;\r\n        }, () => {\r\n          safeCb(callback)({});\r\n          return {};\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Check if a user is logged in\r\n     *   (synchronous|asynchronous)\r\n     *\r\n     * @param  {Function|*} callback - optional, function(is)\r\n     * @return {Bool|Promise}\r\n     */\r\n    isLoggedIn(callback) {\r\n      if (arguments.length === 0) {\r\n        return currentUser.hasOwnProperty('role');\r\n      }\r\n\r\n      return Auth.getCurrentUser(null)\r\n        .then(user => {\r\n          var is = user.hasOwnProperty('role');\r\n          safeCb(callback)(is);\r\n          return is;\r\n        });\r\n    },\r\n\r\n     /**\r\n      * Check if a user has a specified role or higher\r\n      *   (synchronous|asynchronous)\r\n      *\r\n      * @param  {String}     role     - the role to check against\r\n      * @param  {Function|*} callback - optional, function(has)\r\n      * @return {Bool|Promise}\r\n      */\r\n    hasRole(role, callback) {\r\n      var hasRole = function(r, h) {\r\n        return userRoles.indexOf(r) >= userRoles.indexOf(h);\r\n      };\r\n\r\n      if (arguments.length < 2) {\r\n        return hasRole(currentUser.role, role);\r\n      }\r\n\r\n      return Auth.getCurrentUser(null)\r\n        .then(user => {\r\n          var has = (user.hasOwnProperty('role')) ?\r\n            hasRole(user.role, role) : false;\r\n          safeCb(callback)(has);\r\n          return has;\r\n        });\r\n    },\r\n\r\n     /**\r\n      * Check if a user is an admin\r\n      *   (synchronous|asynchronous)\r\n      *\r\n      * @param  {Function|*} callback - optional, function(is)\r\n      * @return {Bool|Promise}\r\n      */\r\n    isAdmin() {\r\n      return Auth.hasRole\r\n        .apply(Auth, [].concat.apply(['admin'], arguments));\r\n    },\r\n\r\n    /**\r\n     * Get auth token\r\n     *\r\n     * @return {String} - a token string used for authenticating\r\n     */\r\n    getToken() {\r\n      return $cookies.get('token');\r\n    }\r\n  };\r\n\r\n  return Auth;\r\n}\r\n\r\nangular.module('meetApp.auth')\r\n  .factory('Auth', AuthService);\r\n\r\n})();\r\n"]}