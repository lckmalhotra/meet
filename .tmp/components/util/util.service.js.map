{"version":3,"sources":["../../../client/components/util/util.service.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,CAAC,YAAW;;;;;AAKZ,WAAS,WAAW,CAAC,OAAO,EAAE;AAC5B,QAAI,IAAI,GAAG;;;;;;;AAOT,YAAM,EAAA,gBAAC,EAAE,EAAE;AACT,eAAO,AAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,GAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;OACrD;;;;;;;;AAQD,cAAQ,EAAA,kBAAC,GAAG,EAAE;AACZ,YAAI,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AACpC,SAAC,CAAC,IAAI,GAAG,GAAG,CAAC;;;AAGb,YAAI,CAAC,CAAC,IAAI,KAAK,EAAE,EAAE;AACjB,WAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;SACjB;;AAED,eAAO,CAAC,CAAC;OACV;;;;;;;;;AASD,kBAAY,EAAA,sBAAC,GAAG,EAAE,OAAO,EAAE;AACzB,WAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AACzB,eAAO,GAAG,AAAC,OAAO,IAAI,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,IAAK,EAAE,CAAC;AAChD,eAAO,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACrC,eAAO,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,eAAO,GAAG,OAAO,CAAC,MAAM,CAAC,UAAS,CAAC,EAAE;AACnC,iBAAO,GAAG,CAAC,QAAQ,KAAK,CAAC,CAAC,QAAQ,IAChC,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,IACnB,GAAG,CAAC,QAAQ,KAAK,CAAC,CAAC,QAAQ,CAAC;SAC/B,CAAC,CAAC;AACH,eAAQ,OAAO,CAAC,MAAM,IAAI,CAAC,CAAE;OAC9B;KACF,CAAC;;AAEF,WAAO,IAAI,CAAC;GACb;;AAED,SAAO,CAAC,MAAM,CAAC,cAAc,CAAC,CAC3B,OAAO,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;CAE/B,CAAA,EAAG,CAAC","file":"util.service.js","sourcesContent":["'use strict';\r\n\r\n(function() {\r\n\r\n/**\r\n * The Util service is for thin, globally reusable, utility functions\r\n */\r\nfunction UtilService($window) {\r\n  var Util = {\r\n    /**\r\n     * Return a callback or noop function\r\n     *\r\n     * @param  {Function|*} cb - a 'potential' function\r\n     * @return {Function}\r\n     */\r\n    safeCb(cb) {\r\n      return (angular.isFunction(cb)) ? cb : angular.noop;\r\n    },\r\n\r\n    /**\r\n     * Parse a given url with the use of an anchor element\r\n     *\r\n     * @param  {String} url - the url to parse\r\n     * @return {Object}     - the parsed url, anchor element\r\n     */\r\n    urlParse(url) {\r\n      var a = document.createElement('a');\r\n      a.href = url;\r\n\r\n      // Special treatment for IE, see http://stackoverflow.com/a/13405933 for details\r\n      if (a.host === '') {\r\n        a.href = a.href;\r\n      }\r\n\r\n      return a;\r\n    },\r\n\r\n    /**\r\n     * Test whether or not a given url is same origin\r\n     *\r\n     * @param  {String}           url       - url to test\r\n     * @param  {String|String[]}  [origins] - additional origins to test against\r\n     * @return {Boolean}                    - true if url is same origin\r\n     */\r\n    isSameOrigin(url, origins) {\r\n      url = Util.urlParse(url);\r\n      origins = (origins && [].concat(origins)) || [];\r\n      origins = origins.map(Util.urlParse);\r\n      origins.push($window.location);\r\n      origins = origins.filter(function(o) {\r\n        return url.hostname === o.hostname &&\r\n          url.port === o.port &&\r\n          url.protocol === o.protocol;\r\n      });\r\n      return (origins.length >= 1);\r\n    }\r\n  };\r\n\r\n  return Util;\r\n}\r\n\r\nangular.module('meetApp.util')\r\n  .factory('Util', UtilService);\r\n\r\n})();\r\n"]}