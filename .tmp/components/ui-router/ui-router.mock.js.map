{"version":3,"sources":["../../../client/components/ui-router/ui-router.mock.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;AAChC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAS,EAAE,EAAE;AACvD,QAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;;AAE9B,QAAI,CAAC,YAAY,GAAG,UAAS,SAAS,EAAE;AACpC,YAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE;AACrC,gBAAI,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC;AACrD,gBAAI,aAAa,KAAK,SAAS,EAAE;AAC7B,sBAAM,KAAK,CAAC,gCAAgC,GAAG,aAAa,GAAG,uBAAuB,GAAG,SAAS,CAAC,CAAC;aACvG;SACJ,MAAM;AACH,kBAAM,KAAK,CAAC,4DAA4D,GAAG,SAAS,CAAC,CAAC;SACzF;AACD,eAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,SAAS,CAAC,CAAC;AAChD,YAAI,QAAQ,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;AAC1B,YAAI,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;AAC/B,gBAAQ,CAAC,OAAO,EAAE,CAAC;AACnB,eAAO,OAAO,CAAC;KAClB,CAAC;;AAEF,QAAI,CAAC,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC;;AAE5B,QAAI,CAAC,kBAAkB,GAAG,UAAS,SAAS,EAAE;AAC1C,YAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAC5C,CAAC;;AAEF,QAAI,CAAC,4BAA4B,GAAG,YAAW;AAC3C,YAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE;AACrC,kBAAM,KAAK,CAAC,+BAA+B,CAAC,CAAC;SAChD;KACJ,CAAC;CACL,CAAC,CAAC","file":"ui-router.mock.js","sourcesContent":["'use strict';\r\n\r\nangular.module('stateMock', []);\r\nangular.module('stateMock').service('$state', function($q) {\r\n    this.expectedTransitions = [];\r\n\r\n    this.transitionTo = function(stateName) {\r\n        if (this.expectedTransitions.length > 0) {\r\n            var expectedState = this.expectedTransitions.shift();\r\n            if (expectedState !== stateName) {\r\n                throw Error('Expected transition to state: ' + expectedState + ' but transitioned to ' + stateName);\r\n            }\r\n        } else {\r\n            throw Error('No more transitions were expected! Tried to transition to ' + stateName);\r\n        }\r\n        console.log('Mock transition to: ' + stateName);\r\n        var deferred = $q.defer();\r\n        var promise = deferred.promise;\r\n        deferred.resolve();\r\n        return promise;\r\n    };\r\n\r\n    this.go = this.transitionTo;\r\n\r\n    this.expectTransitionTo = function(stateName) {\r\n        this.expectedTransitions.push(stateName);\r\n    };\r\n\r\n    this.ensureAllTransitionsHappened = function() {\r\n        if (this.expectedTransitions.length > 0) {\r\n            throw Error('Not all transitions happened!');\r\n        }\r\n    };\r\n});\r\n"]}